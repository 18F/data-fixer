package(default_visibility = ["//visibility:public"])

load("@build_bazel_rules_nodejs//:index.bzl", "npm_package_bin")
load("@npm//@bazel/typescript:index.bzl", "ts_library")

ts_library(
    name = "frontend",
    srcs = glob(
        [
            "**/*.ts",
            "**/*.tsx",
        ],
        exclude = [
            "**/*.test.ts",
        ],
    ),
    module_name = "datafixer/frontend",
    deps = [
        "//core",
        "@npm//@types/react",
        "@npm//@types/react-dom",
        "@npm//fp-ts",
        "@npm//io-ts",
        "@npm//react",
        "@npm//react-dom",
        "@npm//react-hook-form",
        "@npm//uswds",
    ],
)

filegroup(
    name = "tsx-files",
    srcs = glob(["**/*.tsx"]),
)

npm_package_bin(
    name = "compiled-sass",
    outs = [
        "styles",
    ],
    args = [
        "$(execpath :styles.scss)",
        "--include-path external/npm/node_modules/uswds/dist/scss",
        "--output $@",
    ],
    data = [
        ":styles.scss",
        "@npm//uswds",
    ],
    package = "node-sass",
    package_bin = "node-sass",
)

npm_package_bin(
    name = "css-bundle",
    outs = [
        "bundle.min.css",
    ],
    args = [
        "$(execpath :compiled-sass)",
        "--config $(rootpath :postcss.config.js)",
        "--output $@",
    ],
    data = [
        ":compiled-sass",
        ":postcss.config.js",
        ":tsx-files",
        "@npm//@fullhuman/postcss-purgecss",
        "@npm//autoprefixer",
        "@npm//postcss-csso",
    ],
    package = "postcss-cli",
    package_bin = "postcss",
)

npm_package_bin(
    name = "css-dev-bundle",
    outs = [
        "bundle.css",
    ],
    args = [
        "$(execpath :compiled-sass)",
        "--config $(rootpath :postcss-dev.config.js)",
        "--output $@",
    ],
    data = [
        ":compiled-sass",
        ":postcss-dev.config.js",
        ":tsx-files",
        "@npm//autoprefixer",
    ],
    package = "postcss-cli",
    package_bin = "postcss",
)

filegroup(
    name = "uswds-assets",
    srcs = [
        "@npm//:node_modules/uswds/dist/fonts/source-sans-pro/sourcesanspro-bold-webfont.ttf",
        "@npm//:node_modules/uswds/dist/fonts/source-sans-pro/sourcesanspro-bold-webfont.woff",
        "@npm//:node_modules/uswds/dist/fonts/source-sans-pro/sourcesanspro-bold-webfont.woff2",
        "@npm//:node_modules/uswds/dist/fonts/source-sans-pro/sourcesanspro-italic-webfont.ttf",
        "@npm//:node_modules/uswds/dist/fonts/source-sans-pro/sourcesanspro-italic-webfont.woff",
        "@npm//:node_modules/uswds/dist/fonts/source-sans-pro/sourcesanspro-italic-webfont.woff2",
        "@npm//:node_modules/uswds/dist/fonts/source-sans-pro/sourcesanspro-regular-webfont.ttf",
        "@npm//:node_modules/uswds/dist/fonts/source-sans-pro/sourcesanspro-regular-webfont.woff",
        "@npm//:node_modules/uswds/dist/fonts/source-sans-pro/sourcesanspro-regular-webfont.woff2",
        "@npm//:node_modules/uswds/dist/img/chevron.svg",
        "@npm//:node_modules/uswds/dist/img/close.svg",
        "@npm//:node_modules/uswds/dist/img/icon-dot-gov.svg",
        "@npm//:node_modules/uswds/dist/img/icon-https.svg",
        "@npm//:node_modules/uswds/dist/img/us_flag_small.png",
    ],
)

filegroup(
    name = "assets-dev",
    srcs = [
        ":css-dev-bundle",
        ":uswds-assets",
    ],
)

filegroup(
    name = "assets",
    srcs = [
        ":assets-dev",
        ":css-bundle",
    ],
)
