package(default_visibility = ["//visibility:public"])

load("@build_bazel_rules_nodejs//:index.bzl", "nodejs_binary")
load("@io_bazel_rules_docker//container:container.bzl", "container_push")
load("@io_bazel_rules_docker//nodejs:image.bzl", "nodejs_image")
load("@npm//@bazel/typescript:index.bzl", "ts_library")

ts_library(
    name = "server",
    srcs = glob(["**/*.ts"]),
    module_name = "datafixer/context/server",
    deps = [
        "//datafixer/adapters",
        "//datafixer/services",
        "@npm//@types/node",
        "@npm//@types/node-localstorage",
        "@npm//node-localstorage",
    ],
)

nodejs_binary(
    name = "start",
    data = [
        ":server",
        "//datafixer/context/browser:assets",
    ],
    entry_point = ":index.ts",
)

# nodejs_image(
#     name = "image",
#     binary = ":start",
# )

nodejs_image(
    name = "image",
    data = [
        ":server",
        "//datafixer/context/browser:assets",
    ],
    entry_point = ":index.ts",
)

container_push(
    name = "image-push",
    format = "Docker",
    image = ":image",
    registry = "index.docker.io",
    repository = "danielnaab/datafixer",
    tag = "dev",
)
